subsystem = NFIRAOS
component = bs

description = BS Assembly commands.

receive = [
  
  {
    name            = init
    description     = """
Request Command.

Prepares the assembly for operation and reads configuration files. The configuration name must be specified if a configuration version is specified. This command will internally trigger a stop if required.

If the configuration name is not specified, then a default configuration name and version is used. If the configuration version is not specified, then the default version is used for the specified configuration name.
  
Precondition:
<ul>
<li> none
</ul>
Execution:
<ul>
<li> state.cmd = busy
<li> state.move = unindexed | indexed
</ul>
At Completion:
<ul>
<li> state.cmd = ready
</ul>
    """
    args = [
       {
        name        = configuration name 
        description = Name of the configuration file to get from the TMT Configuration Service
        type        = string
      }
      {
        name        = configuration version
        description = Version of the configuration file to get from the TMT Configuration Service
        type        = string 
      }
    ]
  }

  {
    name            = datum
    description     = """
Submit Command.

Datum the BS stage. This command will internally trigger a stop if required.
  
Precondition:
<ul>
<li> state.cmd != uninitialized
</ul>
Execution:
<ul>
<li> state.cmd = busy
<li> state.move = indexing
<li> state.selection = intermediate
</ul>
At Completion:
<ul>
<li> state.cmd = ready
<li> state.move = indexed
<li> state.selection = science 
</ul>
    """
  }

  {
    name            = stop
    description     = """
Request Command.

Cancel the current submit type command and stops the BS stage.
  
Precondition:
<ul>
<li> state.cmd != uninitialized
</ul>
Execution:
<ul>
<li> state.cmd = busy
</ul>
At Completion:
<ul>
<li> state.cmd = ready
<li> state.move = unindexed | indexed
<li> state.selection = science | engineering | intermediate
</ul>
    """
  }

  {
    name            = move
    description     = """
Submit Command.

Engineering command to move the BS stage to the specified positions.

Precondition:
<ul>
<li> state.cmd != uninitialized
<li> state.move = indexed | moving
</ul>
Execution:
<ul>
<li> state.cmd = busy
<li> state.move = moving
<li> state.selection = intermediate
</ul>
At Completion:
<ul>
<li> state.cmd = ready
<li> state.move = indexed
<li> state.selection = science | engineering | intermediate
</ul>
    """
    args = [
      {
        name        = position
        description = target BS stage position.
        type        = double
        units       = degrees
      }
    ]
  }


  {
    name            = select
    description     = """
Submit Command.

Position either the science or engineering beam-splitter in the optical path.
  
Precondition:
<ul>
<li> state.cmd != uninitialized
<li> state.move = indexed | moving
</ul>
Execution:
<ul>
<li> state.cmd = busy
<li> state.move = moving
<li> state.selection = intermediate
</ul>
At Completion:
<ul>
<li> state.cmd = ready
<li> state.move = indexed
<li> state.selection = science | engineering 
    """
    args = [
      {
        name        = selection
        description = choice of either the science or engineering beam-splitter
        enum        = [ science, engineering ] 
      }
    ]
  }

]

