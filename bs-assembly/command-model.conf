subsystem = NFIRAOS
component = bs

description = BS Assembly commands.

receive = [
  
  {
    name            = init
    description     = """Prepares the assembly for operation and reads configuration files. 

This command will internally trigger a stop if required.

If configName and configVersion are not specified in the input, then the default configuration name and version will be used. If only configName is specified in the input, then the default version for the specified configName will be used. If only configVersion is specified in the input, then an error is returned.

*Simple Command.*
    
Precondition:
<ul>
<li> none
</ul>
Execution:
<ul>
<li> state.cmd = BUSY
<li> state.move = false
</ul>
At Completion:
<ul>
<li> state.cmd = READY
</ul>"""
    args = [
       {
        name        = configName 
        description = Name of the configuration file to get from the TMT Configuration Service
        type        = string
      }
      {
        name        = configVersion
        description = Version of the configuration file to get from the TMT Configuration Service
        type        = string 
      }
    ]
  }

  {
    name            = datum
    description     = """Datum the BS stage. 

This command will internally trigger a stop if required.
 
*Discrete Command.*
 
Precondition:
<ul>
<li> state.cmd != UNINITIALIZED
</ul>
Execution:
<ul>
<li> state.cmd = BUSY
<li> state.move = true
<li> state.select = INTERMEDIATE
</ul>
At Completion:
<ul>
<li> state.cmd = READY
<li> state.move = false
<li> state.select = SCIENCE
</ul>"""
  }

  {
    name            = stop
    description     = """Cancel the current discrete type command and stops the BS stage.

*Discrete Command.*
  
Precondition:
<ul>
<li> state.cmd != UNINITIALIZED
</ul>
Execution:
<ul>
<li> state.cmd = BUSY
</ul>
At Completion:
<ul>
<li> state.cmd = READY
<li> state.move = false
<li> state.select = SCIENCE | ENGINEERING | INTERMEDIATE
</ul>"""
  }

  {
    name            = move
    description     = """Engineering command to move the BS stage to the specified positions.

The BS stage must be datumed otherwise this command will be rejected.

*Discrete Command.*

Precondition:
<ul>
<li> state.cmd != UNINITIALIZED
</ul>
Execution:
<ul>
<li> state.cmd = BUSY
<li> state.move = true
<li> state.select = INTERMEDIATE
</ul>
At Completion:
<ul>
<li> state.cmd = READY
<li> state.move = false
<li> state.select = SCIENCE | ENGINEERING | INTERMEDIATE
</ul>"""
    args = [
      {
        name        = position
        description = target BS stage position.
        type        = double
        units       = degrees
      }
    ]
    requiredArgs = [ position ]
  }


  {
    name            = select
    description     = """Position either the science or engineering beam-splitter in the optical path.

The BS stage must be datumed otherwise this command will be rejected.

*Discrete Command.*

Precondition:
<ul>
<li> state.cmd != UNINITIALIZED
</ul>
Execution:
<ul>
<li> state.cmd = BUSY
<li> state.move = true
<li> state.select = INTERMEDIATE
</ul>
At Completion:
<ul>
<li> state.cmd = READY
<li> state.move = false
<li> state.select = SCIENCE | ENGINEERING 
</ul>"""
    args = [
      {
        name        = select
        description = choice of either the science or engineering beam-splitter
        enum        = [ SCIENCE, ENGINEERING ] 
      }
    ]
    requiredArgs = [ select ]
  }

]

