subsystem = NFIRAOS
component = ism

description = ISM Assembly commands.

receive = [
 {
    name            = init
    description     = """Request Command.

Initialize the assembly and read configuration files. The configuration name must be specified if a configuration version is specified. This command will internally trigger a stop if required.

If configName and configVersion are not specified in the input, then the default configuration name and version will be used. If only configName is specified in the input, then the default version for the specified configName will be used. If only configVersion is specified in the input, then an error is returned.

Precondition:
<ul>
<li> none
</ul>
Execution:
<ul>
<li> state.cmd = BUSY
<li> state.move = UNINDEXED | INDEXED
</ul>
At Completion:
<ul>
<li> state.cmd = READY
</ul>"""
    args = [
       {
        name        = configName 
        description = Name of the configuration file to get from the TMT Configuration Service
        type        = string
      }
      {
        name        = configVersion
        description = Version of the configuration file to get from the TMT Configuration Service
        type        = string 
      }
    ]

  }

{
    name            = datum
    description     = """Submit Command.

Datum the ISM stage and prepares. This command will internally trigger a stop if required.

Precondition:
<ul>
<li> state.cmd != UNINITIALIZED
</ul>
Execution:
<ul>
<li> state.cmd = BUSY
<li> state.move = INDEXING
</ul>
At Completion:
<ul>
<li> state.cmd = READY
<li> state.move = INDEXED
<li> state.selection = SIDE
</ul>"""
  }

  {
    name            = stop
    description     = """Request Command.

Cancel the current submit type command and stop the ISM stage.

Precondition:
<ul>
<li> state.cmd != UNINITIALIZED
</ul>
Execution:
<ul>
<li> state.cmd = BUSY
</ul>
At Completion:
<ul>
<li> state.cmd = READY
<li> state.move = UNINDEXED | INDEXED
</ul>"""
  }

 {
    name            = move
    description     = """Submit Command.

Engineering command to move the ISM stage to the specified position.
  
Precondition:
<ul>
<li> state.cmd != UNINITIALIZED
<li> state.move = INDEXED | MOVING
</ul>
Execution:
<ul>
<li> state.cmd = BUSY
<li> state.move = MOVING
<li> state.selection = INTERMEDIATE 
</ul>
At Completion:
<ul>
<li> state.cmd = READY
<li> state.move = INDEXED
<li> state.selection = BOTTOM | SIDE | TOP | ENGR_BOTTOM | ENGR_SIDE | ENGR_TOP | INTERMEDIATE
</ul>"""
    args = [
      {
        name        = position
        description = target ISM stage position.
        type        = double
        units       = degrees
      }
    ]
    requiredArgs = [ position ]
  }

  {
    name            = select
    description     = """Submit Command.

Position the ISM to direct light to the NFIRAOS bottom, side or top port or to one of the engineering bottom, side, or top positions.

Precondition:
<ul>
<li> state.cmd != UNINITIALIZED
<li> state.move = INDEXED | MOVING
</ul>
Execution:
<ul>
<li> state.cmd = BUSY
<li> state.move = MOVING
<li> state.selection = INTERMEDIATE 
</ul>
At Completion:
<ul>
<li> state.cmd = READY
<li> state.move = INDEXED
<li> state.selection = BOTTOM | SIDE | TOP | ENGR_BOTTOM | ENGR_SIDE | ENGR_TOP
</ul>"""
    args = [
      {
        name        = selection
        description = "Choice of either bottom, side or top port positions or one of the engineering bottom, side, or top positions.  Each top, side, and bottom 'positions' correspond to the equivalent top, side, and bottom port gates."
        enum        = [ BOTTOM, SIDE, TOP, ENGR_BOTTOM, ENGR_SIDE, ENGR_TOP ] 
      }
    ]
    requiredArgs = [ selection ]
  }

]

