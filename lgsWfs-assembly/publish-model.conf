subsystem = NFIRAOS
component = lgsWfs

publish {
  events = [
    
    {
      name            = state
      description     = LGS WFS assembly state
      attributes      = [
        {
          name        = cmd
          description = LGS WFS assembly command state
          enum        = [ UNINITIALIZED, READY, BUSY ]
        }
        {
          name        = wfsEnabled
          description = LGS WFS state
          type = array
          dimensions: [6]
          items = {
            enum      = [ DISABLED, ACTIVE, UNKNOWN ]
          }
        }
        {
          name        = readout
          description = LGS WFS readout state
          type = array
          dimensions: [6]
          items = {
            enum      = [ NOTREADY, INITIALIZED, IDLE, CONTINUOUS, SINGLE, TRIGGERED, ERROR, UNKNOWN ]
          }
        }
        {
          name        = parked
          description = LGS WFS is ready for powering off when parked.
          type = array
          dimensions: [6]
          items = {
            type        = boolean
          }
        }
        {
          name        = pixelStream
          description = Target for pixel streams
          type = array
          dimensions: [6]
          items = {
            enum        = [ DISABLED, NRTC, NCC ]
          }
        }
        {
          name        = simulated
          description = Simulated image data is returned if flag is true.
          type = array
          dimensions: [6]
          items = {
            type        = boolean
          }
        }
        {
          name        = simulatedImageLoaded
          description = Simulated image data is returned if flag is true.
          type = array
          dimensions: [6]
          items = {
            type        = boolean
          }
        }
        {
          name        = hcd
          description = LGS WFS VCAM HCD connection states
          type = array
          dimensions: [6]
          items = {
            enum        = [ UNCONNECTED, CONNECTED, DISCONNECTED ]
          }
        }
        {
          name        = debug
          description = Current debug message level.
          enum        = [ DEBUG, INFO, WARN, ERROR ]
        }
      ]
    }
  
#-----------------------------------------------------------------------
# event:temperature

    {
      name            = temperature
      description     = LGS WFS temperature
      attributes      = [
        {
          name        = detector
          description = "Detector temperature"
          type = array
          dimensions: [6]
          items = {
            type        = float
            units       = degrees Celsius
          }
        }
        {
          name        = TEC
          description = "TEC hot side temperature"
          type = array
          dimensions: [6]
          items = {
            type        = float
            units       = degrees Celsius
          }
        }
        {
          name        = electronics
          description = "Electronics temperature"
          type = array
          dimensions: [6]
          items = {
            type        = float
            units       = degrees Celsius
          }
        }
        {
          name        = exchanger
          description = "Heat exchanger bulk temperature"
          type = array
          dimensions: [6]
          items = {
            type        = float
            units       = degrees Celsius
          }
        }
      ]
    }

#-----------------------------------------------------------------------
# event:cmdStatus

    {
      name            = cmdStatus
      description     = Recent command status.
      attributes      = [
        {
          name        = cmd
          description = Rrecent command name.
          type        = string
        }
        {
          name        = args
          description = Recent command arguments. Empty string if no argue mend supplied.
          type        = string
        }
        {
          name        = caller
          description = Recent command caller (if available).
          type        = string
        }
        {
          name        = runId
          description = Run ID associated with the recent command.
          type        = integer 
        }
        {
          name        = ack
          description = Recent command acknowledgement status.
          enum        = [ ACCEPTED, REJECTED ]
        }
        {
          name        = ackMsg
          description = Recent command acknowledgement message. Empty string if acknowledgement is ACCEPTED.
          type        = string
        }
        {
          name        = comp
          description = Recent command completion status.
          enum        = [ INPROGRESS, SUCCESS, FAILED, INTERRUPTED, REJECTED ]
        }
        {
          name        = compMsg
          description = Recent command completion message. Empty string if completion is INPROGRESS or SUCCESS.
          type        = string
        }
      ]
    }

  ] 
  
 
#-----------------------------------------------------------------------
# alarms

  alarms = [
    {
      name = missingHcdA
      description = "The LGS WFS A HCD is not responding. Only triggered if LGS WFS A is enabled."
      severity = major
      archive = true
    }
    {
      name = missingHcdB
      description = "The LGS WFS B HCD is not responding. Only triggered if LGS WFS B is enabled."
      severity = major
      archive = true
    }
    {
      name = missingHcdC
      description = "The LGS WFS C HCD is not responding. Only triggered if LGS WFS C is enabled."
      severity = major
      archive = true
    }
    {
      name = missingHcdD
      description = "The LGS WFS D HCD is not responding. Only triggered if LGS WFS D is enabled."
      severity = major
      archive = true
    }
    {
      name = missingHcdE
      description = "The LGS WFS E HCD is not responding. Only triggered if LGS WFS E is enabled."
      severity = major
      archive = true
    }
    {
      name = missingHcdF
      description = "The LGS WFS F HCD is not responding. Only triggered if LGS WFS F is enabled."
      severity = major
      archive = true
    }
  ]

}
