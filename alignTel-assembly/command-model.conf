subsystem = NFIRAOS
component = alignTel

description = Alignment Telescope Assembly commands.

receive = [
  
  {
    name            = init
    description     = """Immediate Command.

Prepares the assembly for operation and reads configuration files. The configuration name must be specified if a configuration version is specified. This command will internally trigger a stop if required.

If configName and configVersion are not specified in the input, then the default configuration name and version will be used. If only configName is specified in the input, then the default version for the specified configName will be used. If only configVersion is specified in the input, then an error is returned.
    
Precondition:
<ul>
<li> none
</ul>
Execution:
<ul>
<li> state.cmd = BUSY
<li> state.move = UNDATUMED | DATUMED
</ul>
At Completion:
<ul>
<li> state.cmd = READY
</ul>"""
    args = [
       {
        name        = configName 
        description = Name of the configuration file to get from the TMT Configuration Service
        type        = string
      }
      {
        name        = configVersion
        description = Version of the configuration file to get from the TMT Configuration Service
        type        = string 
      }
    ]
  }

  {
    name            = datum
    description     = """Submit Command.

Datum the Alignment Telescope stages. This command will internally trigger a stop if required.
  
Precondition:
<ul>
<li> state.cmd != UNINITIALIZED
</ul>
Execution:
<ul>
<li> state.cmd = BUSY
<li> state.move = DATUMING
<li> state.select = INTERMEDIATE
</ul>
At Completion:
<ul>
<li> state.cmd = READY
<li> state.move = DATUMED
<li> state.select = {default from config file}
</ul>"""
  }

  {
    name            = stop
    description     = """Immediate Command.

Cancel the current submit type command and stops the Alignment Telescope stages.
  
Precondition:
<ul>
<li> state.cmd != UNINITIALIZED
</ul>
Execution:
<ul>
<li> state.cmd = BUSY
</ul>
At Completion:
<ul>
<li> state.cmd = READY
<li> state.move = UNDATUMED | DATUMED
<li> state.select = SCIENCE | ENGINEERING | INTERMEDIATE
</ul>"""
  }

  {
    name            = move
    description     = """Submit Command.

Engineering command to move the Alignment Telescope stages to the specified positions.

Precondition:
<ul>
<li> state.cmd != UNINITIALIZED
<li> state.move = DATUMED | MOVING
</ul>
Execution:
<ul>
<li> state.cmd = BUSY
<li> state.move = MOVING
<li> state.select = INTERMEDIATE
</ul>
At Completion:
<ul>
<li> state.cmd = READY
<li> state.move = DATUMED
<li> state.select = SCIENCE | ENGINEERING | INTERMEDIATE
</ul>"""
    args = [
      {
        name        = stage1
        description = target stage 1 position.
        type        = double
      }
      {
        name        = stage2
        description = target stage 2 position.
        type        = double
      }
    ]
  }


  {
    name            = select
    description     = """Submit Command.

Position Alignment Telescope in the optical path.

Precondition:
<ul>
<li> state.cmd != UNINITIALIZED
<li> state.move = DATUMED | MOVING
</ul>
Execution:
<ul>
<li> state.cmd = BUSY
<li> state.move = MOVING
<li> state.select = INTERMEDIATE
</ul>
At Completion:
<ul>
<li> state.cmd = READY
<li> state.move = DATUMED
<li> state.select = SCIENCE | ENGINEERING 
</ul>"""
    args = [
      {
        name        = select
        description = TBD
        enum        = [ OPTION1, OPTION2 ] 
      }
    ]
    requiredArgs = [ select ]
  }

]

