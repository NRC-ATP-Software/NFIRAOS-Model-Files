subsystem = NFIRAOS
component = ngsAdc

description = NGS ADC Assembly commands.

receive = [
  
   {
    name            = init
    description     = """
Request Command.

Prepares the assembly for operation and reads configuration files. The configuration name must be specified if a configuration version is specified. This command will internally trigger a stop if required.

If configName and configVersion are not specified in the input, then the default configuration name and version will be used. If only configName is specified in the input, then the default version for the specified configName will be used. If only configVersion is specified in the input, then an error is returned.

Precondition:
<ul>
<li> none
</ul>
Execution:
<ul>
<li> state.cmd = busy
<li> state.move = unindexed | indexed
</ul>
At Completion:
<ul>
<li> state.cmd = ready
</ul>
    """
    args = [
       {
        name        = configName 
        description = Name of the configuration file to get from the TMT Configuration Service
        type        = string
      }
      {
        name        = configVersion
        description = Version of the configuration file to get from the TMT Configuration Service
        type        = string 
      }
    ]
  }

   {
    name            = datum
    description     = """
Submit Command.

Datum the NGS ADC stages and prepares the assembly for operation. This command will internally trigger a stop if required.
  
Precondition:
<ul>
<li> state.cmd != uninitialized
</ul>
Execution:
<ul>
<li> state.cmd = busy
<li> state.move = indexing
</ul>
At Completion:
<ul>
<li> state.cmd = ready
<li> state.move = indexed
</ul>
    """
  }

  {
    name            = stop
    description     = """
Request Command.

Cancel the current submit type command and stop all NGS ADC stages.
  
Precondition:
<ul>
<li> state.cmd != uninitialized
</ul>
Execution:
<ul>
<li> state.cmd = busy
</ul>
At Completion:
<ul>
<li> state.cmd = ready
<li> state.move = unindexed | indexed
</ul>
    """
  }

{
    name            = move
    description     = """
Submit Command.

Engineering command to move individual NGS ADC stages to the specified positions.
  
At least one input parameter must be specified, all unspecified stages will remain unchanged.

Precondition:
<ul>
<li> state.cmd != uninitialized
<li> state.move = indexed | moving
</ul>
Execution:
<ul>
<li> state.cmd = busy
<li> state.move = moving
</ul>
At Completion:
<ul>
<li> state.cmd = ready
<li> state.move = indexed
</ul>
    """
    args = [
      {
        name        = rotationA
        description = target NGS ADC rotation A stage position.
        type        = double
        units       = degrees of mechanical rotation in local stage coordinate system
      }
      {
        name        = rotationB
        description = target NGS ADC rotation B stage position.
        type        = double
        units       = degrees of mechanical rotation in local stage coordinate system
      }
    ]
  }

  {
    name            = setAdc
    description     = """
Submit Command.

Position the NGS ADC based on specified power and orientation.
 
Precondition:
<ul>
<li> state.cmd != uninitialized
<li> state.move = indexed | moving
</ul>
Execution:
<ul>
<li> state.cmd = busy
<li> state.move = moving
</ul>
At Completion:
<ul>
<li> state.cmd = ready
<li> state.move = indexed
</ul>
  """
    args = [
      {
        name        = power
        description = target ADC power
        type        = double
        units       = TBD
      }
      {
        name        = orientation
        description = target ADC orientation
        type        = double
        units       = degrees
      }
    ]
    requiredArgs = [ power, orientation ]
  }

  {
    name            = follow
    description     = """
Request Command.

Enable the NGS ADC follow mode. When the follow mode is enabled, the NGS ADC will track the dispersion parameters from the TCS.

Precondition:                             
<ul>
<li> state.cmd != uninitialized
<li> state.move = indexed | moving
</ul>
Execution:
<ul>
<li> none
</ul>
At Completion:
<ul>
<li> state.cmd = continuous
<li> state.move = indexed | moving
</ul>
  """
  }

]

