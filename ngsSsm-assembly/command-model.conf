subsystem = NFIRAOS
component = ngsSsm

description = NGS SSM Assembly commands.

receive = [

  {
    name            = init
    description     = """
Request Command.

Prepares the assembly for operation and reads configuration files. The configuration name must be specified if a configuration version is specified. This command will also clear the tip/tilt/focus integrator. This command will internally trigger a stop if required.

If configName and configVersion are not specified in the input, then the default configuration name and version will be used. If only configName is specified in the input, then the default version for the specified configName will be used. If only configVersion is specified in the input, then an error is returned.
 
Precondition:
<ul>
<li> none
</ul>
Execution:
<ul>
<li> state.cmd = busy
<li> state.move = unindexed | indexed
</ul>
At Completion:
<ul>
<li> state.cmd = ready
</ul>
    """
    args = [
       {
        name        = configName 
        description = Name of the configuration file to get from the TMT Configuration Service
        type        = string
      }
      {
        name        = configVersion
        description = Version of the configuration file to get from the TMT Configuration Service
        type        = string 
      }
    ]
  }
  
  {
    name            = datum
    description     = """
Submit Command.

Datum all the NGS SSM stages and resets the tip/tilt/focus integrator. This command will internally trigger a stop if required.
  
Precondition:
<ul>
<li> state.cmd != uninitialized
</ul>
Execution:
<ul>
<li> state.cmd = busy
<li> state.move = indexing
</ul>
At Completion:
<ul>
<li> state.cmd = ready
<li> state.move = indexed
<li> state.nss = false
<li> nssTarget.x = 0
<li> nssTarget.y = 9
</ul>
    """
  }

  {
    name            = stop
    description     = """
Request Command.

Cancel the current submit type command and stop all NGS SSM stages.
  
Precondition:
<ul>
<li> state.cmd != uninitialized
</ul>
Execution:
<ul>
<li> state.cmd = busy
</ul>
At Completion:
<ul>
<li> state.cmd = ready
<li> state.move = unindexed | indexed
</ul>
    """
  }

  {
    name            = setDither
    description     = """
Request Command.

Set or clear the telescope dither state, to inform the SSM the whether telescope is currently performing a dither or not. When the telescope is dithering the SSM assembly will change servo gains to stay locked on the guide star. This command does not stop the follow mode.
  
Precondition:
<ul>
<li> state.cmd = ready | continuous | error
</ul>
Execution:
<ul>
<li> state.cmd = busy
</ul>
At Completion:
<ul>
<li> state.cmd = ready | continuous
<li> state.dither = true | false
</ul>
    """
    args = [
      {
        name        = dither
        description = flag indicating if the telescope is currently dithering
        type        = boolean
      }
    ]
    requiredArgs = [ dither ]
  }


  {
    name            = move
    description     = """
Submit Command.

Engineering command to move individual NGS SSM stages to the specified positions.

At least on input parameter must be specified, all unspecified stages will remain unchanged.
  
Precondition:
<ul>
<li> state.cmd != uninitialized
<li> state.move = indexed | moving
</ul>
Execution:
<ul>
<li> state.cmd = busy
<li> state.move = moving
</ul>
At Completion:
<ul>
<li> state.cmd = ready
<li> state.move = indexed
</ul>
    """
    args = [
      {
        name        = x
        description = target NGS SSM x-axis stage position.
        type        = double
        units       = "mm in local stage coordinate system"
      }
      {
        name        = y
        description = target NGS SSM y-axis stage position.
        type        = double
        units       = "mm in local stage coordinate system"
      }
      {
        name        = tip
        description = target NGS SSM tip-axis stage position.
        type        = double
        units       = "degrees in local stage coordinate system"
      }
      {
        name        = tilt
        description = target NGS SSM tilt-axis stage position.
        type        = double
        units       = "degrees in local stage coordinate system"
      }
      {
        name        = focus
        description = target NGS SSM focus-axis stage position.
        type        = double
        units       = "mm in local stage coordinate system"
      }
    ]
  }

  {
    name            = positionPwfs
    description     = """
Submit Command.

Position the PWFS based on the pointing model.

Precondition:
<ul>
<li> state.cmd != uninitialized
<li> state.move = indexed | moving
</ul>
Execution:
<ul>
<li> state.cmd = busy
<li> state.move = moving
</ul>
At Completion:
<ul>
<li> state.cmd = ready
<li> state.move = indexed
</ul>
    """
    args = [
      {
        name        = imageX
        description = target NGS SSM x-axis image position.
        type        = double
        units       = "mm in FCRS174.5 at reference wavelength"
      }
      {
        name        = imageY
        description = target NGS SSM y-axis image position.
        type        = double
        units       = "mm in FCRS174.5 at reference wavelength"
      }
      {
        name        = pupilX
        description = target NGS SSM x-axis pupil position.
        type        = double
        units       = "fraction of pupil diameter shift in FCRS174.5"
      }
      {
        name        = pupilY
        description = target NGS SSM y-axis pupil position.
        type        = double
        units       = "fraction of pupil diameter shift in FCRS174.5"
      }
      {
        name        = focus
        description = target NGS SSM focus position.
        type        = double
        units       = "micrometers of RMS wavefront"
      }
    ]
    requiredArgs = [ imageX, imageY, pupilX, pupilY, focus ]
  }


{
    name            = setNssTarget
    description     = """
Submit Command.
  
Set the input PWFS position for following in NSS mode. This position is used instead of the PWFS position stream from the TCS. This command does not actually move the SSM until the following in NSS mode is enabled.
  
Precondition:
<ul>
<li> state.cmd != uninitialized
</ul>
Execution:
<ul>
<li> state.cmd = busy | continuous
</ul>
At Completion:
<ul>
<li> state.cmd = ready | continuous
<li> nssTarget.x = {input x}
<li> nssTarget.y = {input y}
</ul>
    """
    args = [
      {
        name        = x
        description = target in x for NSS NGS source.
        type        = double
        units       = "mm in X-axis of FCRS174.5 at reference wavelength"
      }
      {
        name        = y
        description = target in y for NSS NGS source.
        type        = double
        units       = "mm in Y-axis of FCRS174.5 at reference wavelength"
      }
    ]
    requiredArgs = [ x, y ]
  }

  {
    name            = resetIntegrator
    description     = """ 
Request Command.

Reset the tip/tilt/focus error integrator. This command does not stop the follow mode.
  
Precondition:
<ul>
<li> state.cmd = ready | continuous | error
</ul>
Execution:
<ul>
<li> state.cmd = busy
</ul>
At Completion:
<ul>
<li> state.cmd = ready | continuous
</ul>
    """
  }

  {
    name            = follow
    description     = """
Request Command.

Enable the NGS SSM follow mode. When the follow mode is enabled, the NGS SSM will track the PWFS image position demands from the TCS, TTF errors from the RTC and the expected pupil shift stream from NGS ADC Assembly. 

If NSS mode is enable, then the NGS SSM will not follow the PWFS image position stream from the TCS. Instead the image position will be set based on the image position set by the setNssTarget command and the ADC image shift stream from the NGS ADC Assembly. If the nss input parameter is not specified, then the NSS mode will be disabled.
  
Precondition:                             
<ul>
<li> state.cmd != uninitialized
<li> state.move = indexed | moving
</ul>
Execution:
<ul>
<li> none
</ul>
At Completion:
<ul>
<li> state.cmd = continuous
<li> state.move = indexed | moving
<li> status.nss = {input nss}
</ul>
  """
  args = [
      {
        name        = nss
        description = enable NSS mode to operate with NSS NGS Assembly
        type        = boolean
      }
    ]
  }

]

