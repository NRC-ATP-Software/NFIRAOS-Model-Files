subsystem = NFIRAOS
component = timing

description = Timing Assembly commands.

receive = [

  {
    name            = init
    description     = """Prepares the assembly for operation and reads configuration files.

This command will internally trigger a stop if required.

If configName and configVersion are not specified in the input, then the default configuration name and version will be used. If only configName is specified in the input, then the default version for the specified configName will be used. If only configVersion is specified in the input, then an error is returned.

*Simple Command.*

Precondition:
<ul>
<li> none
</ul>
Execution:
<ul>
<li> state.cmd = BUSY
</ul>
At Completion:
<ul>
<li> state.cmd = READY
</ul>"""
    args = [
       {
        name        = configName
        description = Name of the configuration file to get from the TMT Configuration Service
        type        = string
      }
      {
        name        = configVersion
        description = Version of the configuration file to get from the TMT Configuration Service
        type        = string
      }
    ]
  }

  {
    name            = stop
    description     = """Stop all trigger signals.

*Simple Command.*

Precondition:
<ul>
<li> state.cmd != UNINITIALIZED
</ul>
Execution:
<ul>
<li> state.cmd = BUSY
</ul>
At Completion:
<ul>
<li> state.cmd = READY
<li> trigger.enable[] = false
</ul>"""
  }

  {
    name            = enableTriggers
    description     = """Configure and start all of the trigger signals.

This high-level command is used to configure and start the full set of trigger signals required for typical NFIRAOS observations.

Triggers may be specified as absolute periods (*_ABS_PERIOD), or using period multipliers (*_REL_PERIOD) relative to the fundamental AO period, P<sub>0</sub>, for each channel (but not both). The exception to this constraint is that at least one trigger (normally one of the LGWFS or PWFS triggers) must be specified using an absolute period so that P<sub>0</sub> can be determined, as the minimum of all supplied absolute periods (normally 1/800 Hz = 1250 microseconds).

Each of the signal generators that are used to produce the pulses will be daisy-chained together, using one (designated as the master) to generate a reference timer for the others (slaves). This reference timer will run at the fundamental AO period P<sub>0</sub>. The optional *_DELAY attribute for each channel is a static offset relative to this reference signal.

The following checks are made, failing at the command acknowledgement stage if they are not met:

<ul>
<li> At least one trigger (normally the LGSWFS or PWFS trigger) must be specified as an absolute period in order to establish P<sub>0</sub>. In the case of the LGSWFS, this can mean any one of LGSWFS[A-F], or LGSWFS which is short-hand for all of the LGSWFSs.
<li> P<sub>0</sub> must be no shorter than 1250 microseconds (corresponding to 800 Hz), unless the only absolute trigger period specified (for testing purposes) was the NGS FSM (which can run faster, see next point).
<li> The NGS FSM trigger period must normally divide evenly into P<sub>0</sub>, as the NGS FSM must be driven through a complete cycle of discrete steps (typically 32) for each fundamental AO period, or a period of 1250 microseconds / 32 = 36.0625 microseconds. The exception is when only the NGS FSM period is specified for testing purposes.
<li> All remaining channel periods must be integer multiples (1 or greater) of  P<sub>0</sub>.
</ul>

The start time specifies the time at which the first trigger pulse will be generated. If the start time has already elapsed then the first trigger pulse will occur as soon as possible.

Channels 0 to 12 are allocated to client instrument OIWFSs and ODGWs. It is up to the AOSQ to known which instrument detectors are physically connected to each of trigger channels 0 through 12 (TBD, it is possible that the NCC will abstract this information through config files).

The LGSWFS period can be specified either individually (assigning values to each of LGSWFS[A-F]), or to all of them at the same time with a single LGSWFS value, but not both.

The ALL* attributes can be used to simultaneously set the period and start time of all channels to the same values (in which case no other attributes may be set).

Any channel for which a period is not specified will not be activated.

*Following Command.*

Precondition:
<ul>
<li> state.cmd != UNINITIALIZED
</ul>
Execution:
<ul>
<li> state.cmd = BUSY
</ul>
At Completion:
<ul>
<li> state.cmd = CONTINUOUS
<li> trigger.enable[{input channel}] = true
<li> trigger.period[{input channel}] = {input period}
<li> trigger.startTime[{input channel}] = {input startTime}
</ul>"""
    args = [
      {
        name        = ALL_ABS_PERIOD
        description = "Absolute period for all channels"
        type        = double
        units       = microseconds
        minimum     = 1250
      }
      {

        name        = ALL_DELAY
        description = "Delay for all channels"
        type        = double
        units       = microseconds
        minimum     = 0
      }
      {
        name        = LGSWFS_ABS_PERIOD
        description = "Absolute period for all of the LGS WFSs"
        type        = double
        units       = microseconds
        minimum     = 1250
      }
      {
        name        = LGSWFS_REL_PERIOD
        description = "Period for all of the LGS WFSs relative to P<sub>0</sub>"
        type        = double
        minimum     = 0
      }
      {
        name        = LGSWFS_DELAY
        description = "Delay for all of the LGS WFSs"
        type        = double
        units       = microseconds
        minimum     = 0
      }
      {
        name        = LGSWFSA_ABS_PERIOD
        description = "Absolute period for LGS WFS A"
        type        = double
        units       = microseconds
        minimum     = 1250
      }
      {
        name        = LGSWFSA_REL_PERIOD
        description = "Period for LGS WFS A relative to P<sub>0</sub>"
        type        = double
        minimum     = 0
      }
      {
        name        = LGSWFSA_DELAY
        description = "Delay for LGS WFS A"
        type        = double
        units       = microseconds
        minimum     = 0
      }
      {
        name        = LGSWFSB_ABS_PERIOD
        description = "Absolute period for LGS WFS B"
        type        = double
        units       = microseconds
        minimum     = 1250
      }
      {
        name        = LGSWFSB_REL_PERIOD
        description = "Period for LGS WFS B relative to P<sub>0</sub>"
        type        = double
        minimum     = 0
      }
      {
        name        = LGSWFSB_DELAY
        description = "Delay for LGS WFS B"
        type        = double
        units       = microseconds
        minimum     = 0
      }
      {
        name        = LGSWFSC_ABS_PERIOD
        description = "Absolute period for LGS WFS C"
        type        = double
        units       = microseconds
        minimum     = 1250
      }
      {
        name        = LGSWFSC_REL_PERIOD
        description = "Period for LGS WFS C relative to P<sub>0</sub>"
        type        = double
        minimum     = 0
      }
      {
        name        = LGSWFSC_DELAY
        description = "Delay for LGS WFS C"
        type        = double
        units       = microseconds
        minimum     = 0
      }
      {
        name        = LGSWFSD_ABS_PERIOD
        description = "Absolute period for LGS WFS D"
        type        = double
        units       = microseconds
        minimum     = 1250
      }
      {
        name        = LGSWFSD_REL_PERIOD
        description = "Period for LGS WFS D relative to P<sub>0</sub>"
        type        = double
        minimum     = 0
      }
      {
        name        = LGSWFSD_DELAY
        description = "Delay for LGS WFS D"
        type        = double
        units       = microseconds
        minimum     = 0
      }
      {
        name        = LGSWFSE_ABS_PERIOD
        description = "Absolute period for LGS WFS E"
        type        = double
        units       = microseconds
        minimum     = 1250
      }
      {
        name        = LGSWFSE_REL_PERIOD
        description = "Period for LGS WFS E relative to P<sub>0</sub>"
        type        = double
        minimum     = 0
      }
      {
        name        = LGSWFSE_DELAY
        description = "Delay for LGS WFS E"
        type        = double
        units       = microseconds
        minimum     = 0
      }
      {
        name        = LGSWFSF_ABS_PERIOD
        description = "Absolute period for LGS WFS F"
        type        = double
        units       = microseconds
        minimum     = 1250
      }
      {
        name        = LGSWFSF_REL_PERIOD
        description = "Period for LGS WFS F relative to P<sub>0</sub>"
        type        = double
        minimum     = 0
      }
      {
        name        = LGSWFSF_DELAY
        description = "Delay for LGS WFS F"
        type        = double
        units       = microseconds
        minimum     = 0
      }
      {
        name        = PWFS_ABS_PERIOD
        description = "Absolute period for PWFS"
        type        = double
        units       = microseconds
        minimum     = 1250
      }
      {
        name        = PWFS_REL_PERIOD
        description = "Period for PWFS relative to P<sub>0</sub>"
        type        = double
        minimum     = 0
      }
      {
        name        = PWFS_DELAY
        description = "Delay for PWFS"
        type        = double
        units       = microseconds
        minimum     = 0
      }
      {
        name        = NGSFSM_ABS_PERIOD
        description = "Absolute period for NGS FSM"
        type        = double
        units       = microseconds
        minimum     = 39.0625
      }
      {
        name        = NGSFSM_REL_PERIOD
        description = "Period for NGS FSM relative to P<sub>0</sub>"
        type        = double
        minimum     = 0
      }
      {
        name        = NGSFSM_DELAY
        description = "Delay for NGS FSM"
        type        = double
        units       = microseconds
        minimum     = 0
      }
      {
        name        = CHANNEL0_ABS_PERIOD
        description = "Absolute period for Channel 0"
        type        = double
        units       = microseconds
        minimum     = 1250
      }
      {
        name        = CHANNEL0_REL_PERIOD
        description = "Period for Channel 0 relative to P<sub>0</sub>"
        type        = double
        minimum     = 0
      }
      {
        name        = CHANNEL0_DELAY
        description = "Delay for Channel 0"
        type        = double
        units       = microseconds
        minimum     = 0
      }
      {
        name        = CHANNEL1_ABS_PERIOD
        description = "Absolute period for Channel 1"
        type        = double
        units       = microseconds
        minimum     = 1250
      }
      {
        name        = CHANNEL1_REL_PERIOD
        description = "Period for Channel 1 relative to P<sub>0</sub>"
        type        = double
        minimum     = 0
      }
      {
        name        = CHANNEL1_DELAY
        description = "Delay for Channel 1"
        type        = double
        units       = microseconds
        minimum     = 0
      }
      {
        name        = CHANNEL2_ABS_PERIOD
        description = "Absolute period for Channel 2"
        type        = double
        units       = microseconds
        minimum     = 1250
      }
      {
        name        = CHANNEL2_REL_PERIOD
        description = "Period for Channel 2 relative to P<sub>0</sub>"
        type        = double
        minimum     = 0
      }
      {
        name        = CHANNEL2_DELAY
        description = "Delay for Channel 2"
        type        = double
        units       = microseconds
        minimum     = 0
      }
      {
        name        = CHANNEL3_ABS_PERIOD
        description = "Absolute period for Channel 3"
        type        = double
        units       = microseconds
        minimum     = 1250
      }
      {
        name        = CHANNEL3_REL_PERIOD
        description = "Period for Channel 3 relative to P<sub>0</sub>"
        type        = double
        minimum     = 0
      }
      {
        name        = CHANNEL3_DELAY
        description = "Delay for Channel 3"
        type        = double
        units       = microseconds
        minimum     = 0
      }
      {
        name        = CHANNEL4_ABS_PERIOD
        description = "Absolute period for Channel 4"
        type        = double
        units       = microseconds
        minimum     = 1250
      }
      {
        name        = CHANNEL4_REL_PERIOD
        description = "Period for Channel 4 relative to P<sub>0</sub>"
        type        = double
        minimum     = 0
      }
      {
        name        = CHANNEL4_DELAY
        description = "Delay for Channel 4"
        type        = double
        units       = microseconds
        minimum     = 0
      }
      {
        name        = CHANNEL5_ABS_PERIOD
        description = "Absolute period for Channel 5"
        type        = double
        units       = microseconds
        minimum     = 1250
      }
      {
        name        = CHANNEL5_REL_PERIOD
        description = "Period for Channel 5 relative to P<sub>0</sub>"
        type        = double
        minimum     = 0
      }
      {
        name        = CHANNEL5_DELAY
        description = "Delay for Channel 5"
        type        = double
        units       = microseconds
        minimum     = 0
      }
      {
        name        = CHANNEL6_ABS_PERIOD
        description = "Absolute period for Channel 6"
        type        = double
        units       = microseconds
        minimum     = 1250
      }
      {
        name        = CHANNEL6_REL_PERIOD
        description = "Period for Channel 6 relative to P<sub>0</sub>"
        type        = double
        minimum     = 0
      }
      {
        name        = CHANNEL6_DELAY
        description = "Delay for Channel 6"
        type        = double
        units       = microseconds
        minimum     = 0
      }
      {
        name        = CHANNEL7_ABS_PERIOD
        description = "Absolute period for Channel 7"
        type        = double
        units       = microseconds
        minimum     = 1250
      }
      {
        name        = CHANNEL7_REL_PERIOD
        description = "Period for Channel 7 relative to P<sub>0</sub>"
        type        = double
        minimum     = 0
      }
      {
        name        = CHANNEL7_DELAY
        description = "Delay for Channel 7"
        type        = double
        units       = microseconds
        minimum     = 0
      }
      {
        name        = CHANNEL8_ABS_PERIOD
        description = "Absolute period for Channel 8"
        type        = double
        units       = microseconds
        minimum     = 1250
      }
      {
        name        = CHANNEL8_REL_PERIOD
        description = "Period for Channel 8 relative to P<sub>0</sub>"
        type        = double
        minimum     = 0
      }
      {
        name        = CHANNEL8_DELAY
        description = "Delay for Channel 8"
        type        = double
        units       = microseconds
        minimum     = 0
      }
      {
        name        = CHANNEL9_ABS_PERIOD
        description = "Absolute period for Channel 9"
        type        = double
        units       = microseconds
        minimum     = 1250
      }
      {
        name        = CHANNEL9_REL_PERIOD
        description = "Period for Channel 9 relative to P<sub>0</sub>"
        type        = double
        minimum     = 0
      }
      {
        name        = CHANNEL9_DELAY
        description = "Delay for Channel 9"
        type        = double
        units       = microseconds
        minimum     = 0
      }
      {
        name        = CHANNEL10_ABS_PERIOD
        description = "Absolute period for Channel 10"
        type        = double
        units       = microseconds
        minimum     = 1250
      }
      {
        name        = CHANNEL10_REL_PERIOD
        description = "Period for Channel 10 relative to P<sub>0</sub>"
        type        = double
        minimum     = 0
      }
      {
        name        = CHANNEL10_DELAY
        description = "Delay for Channel 10"
        type        = double
        units       = microseconds
        minimum     = 0
      }
      {
        name        = CHANNEL11_ABS_PERIOD
        description = "Absolute period for Channel 11"
        type        = double
        units       = microseconds
        minimum     = 1250
      }
      {
        name        = CHANNEL11_REL_PERIOD
        description = "Period for Channel 11 relative to P<sub>0</sub>"
        type        = double
        minimum     = 0
      }
      {
        name        = CHANNEL11_DELAY
        description = "Delay for Channel 11"
        type        = double
        units       = microseconds
        minimum     = 0
      }
      {
          name        = startTime
          description = "time at which the first pulse of the trigger signal should occur"
          type        = double
          units       = "TAI / PTP"
      }
    ]
  }


  {
    name            = modifyTrigger
    description     = """Modify a single trigger

This commands is used to change the settings of a single trigger.

If a previous enableTriggers command was issued (state.cmd = CONTINUOUS), and the assembly is actively triggering, this command will modify the period of the selected channel without affecting any of the other channels. The same constraints on allowable periods as for the enableTriggers command apply here; the fundamental AO period P<sub>0</sub> previously established will be used in the calculation.

A setTrigger command will not be accepted if it would modify P<sub>0</sub>. For example, if both the LGSWFS and the PWFS were running with a period of 2000 microseconds, the setTrigger command would not be allowed if the requested LGSWFS period were 1250 microseconds.

An optional future start time can be specified. If the start time has already elapsed, the assembly will implement the new channel settings as quickly as possible.

Precondition:
<ul>
<li> state.cmd = CONTINUOUS
</ul>
Execution:
<ul>
<li> state.cmd = BUSY
</ul>
At Completion:
<ul>
<li> state.cmd = CONTINUOUS
<li> trigger.enable[{input channel}] = true
<li> trigger.period[{input channel}] = {input period}
<li> trigger.startTime[{input channel}] = {input startTime}
</ul>"""
    args = [
      {
        name        = channel
        description = """specific trigger signal to modify
<ul>
<li> input channel set to LGSWFS mean all six LGS WFS trigger signals will be modified with the same period and start time.
<li> input channel set to any other value means only the corresponding trigger signals will be modified with the specified period and start time.
</ul>"""
        enum        = [ LGSWFS, LGSWFSA, LGSWFSB, LGSWFSC, LGSWFSD, LGSWFSE, LGSWFSF, PWFS, NGSFSM, CHANNEL0, CHANNEL1, CHANNEL2, CHANNEL3, CHANNEL4, CHANNEL5, CHANNEL6, CHANNEL7, CHANNEL8, CHANNEL9, CHANNEL10, CHANNEL11 ]
      }
      {
          name        = abs_period
          description = "absolute period of the trigger pulses"
          type        = double
          units       = "microseconds"
          minimum     = 0
      }
      {
          name        = rel_period
          description = "period for trigger pulses relative to P<sub>0</sub>"
          type        = double
          minimum     = 0
      }
      {
        name        = delay
        description = "delay for the trigger with respect to the clock signal"
        type        = double
        units       = "microseconds"
        minimum     = 0
      }
      {
          name        = startTime
          description = "time at which the first pulse of the trigger signal should occur"
          type        = double
          units       = "TAI / PTP"
      }
    ]
    requiredArgs = [ channel, period ]
  }

  {
    name            = disableTrigger
    description     = """Stop the specified trigger signal.

The cmd state will remain CONTINUOUS, regardless of whether any trigger signals are still enabled after this command is complete. In this way the reference clock signal for the signal generators will continue to run at the AO period P<sub>0</sub>, and any individual trigger may be restarted using the modifyTrigger command.

*Simple Command.*

Precondition:
<ul>
<li> state.cmd = CONTINUOUS
</ul>
Execution:
<ul>
<li> state.cmd = BUSY
</ul>
At Completion:
<ul>
<li> state.cmd = READY | CONTINUOUS
<li> trigger.enable[{input channel}] = false
</ul>"""
    args = [
      {
        name        = channel
        description = """specific trigger signal to stop
<ul>
<li> input channel set to LGSWFS mean all six LGS WFS trigger signals will be disabled
<li> input channel set to ALL means all twenty-one trigger signals will be disabled
<li> input channel set to any other value means only the corresponding trigger signals will be disabled
</ul>"""
        enum        = [ LGSWFS, LGSWFSA, LGSWFSB, LGSWFSC, LGSWFSD, LGSWFSE, LGSWFSF, PWFS, NGSFSM, CHANNEL0, CHANNEL1, CHANNEL2, CHANNEL3, CHANNEL4, CHANNEL5, CHANNEL6, CHANNEL7, CHANNEL8, CHANNEL9, CHANNEL10, CHANNEL11, ALL ]
      }
    ]
    requiredArgs = [ channel ]
  }

]
