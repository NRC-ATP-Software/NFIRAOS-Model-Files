subsystem = NFIRAOS
component = pwfs

publish {
  events = [
    
#-----------------------------------------------------------------------
# state
    {
      name            = state
      description     = PWFS assembly state
      attributes      = [
        {
          name        = binningFactor
          description = Number of pixels to bin in each direction.
          enum        = [ 1, 2, 4, 8, 16 ]
        }
        {
          name        = cmd
          description = PWFS assembly command state
          enum        = [ UNINITIALIZED, READY, BUSY, CONTINUOUS ]
        }
        {
          name        = debug
          description = Current debug message level.
          enum        = [ DEBUG, INFO, WARN, ERROR ]
        }
        {
          name        = hcd
          description = PWFS VCAM HCD connection state
          enum        = [ UNCONNECTED, CONNECTED, DISCONNECTED ]
        }
        {
          name        = parked
          description = PWFS is ready for powering off when parked.
          type        = boolean
        }
        {
          name        = pixelStream
          description = Target for pixel streams
          enum        = [ DISABLED, NRTC, NCC ]
        }
        {
          name        = readout
          description = PWFS readout state
          enum        = [ DISABLED, NOTREADY, INITIALIZED, IDLE, CONTINUOUS, SINGLE, TRIGGERED, ERROR ]
        }
        {
          name        = hwSimulated
          description = """ State of hardware-level simulation for the PWFS.

  + INACTIVE     : simulated mode is off, and the image is not loaded
  + IMAGE_LOADED : simulated mode is off, but the image is loaded and ready
  + ACTIVE       : simulated mode is on, and the simulated image is being transmitted
"""
          enum      = [INACTIVE, IMAGE_LOADED, ACTIVE]
        }
      ]
    }

#-----------------------------------------------------------------------
# cmdStatus
    {
      name            = cmdStatus
      description     = Recent command status. (engineering)
      attributes      = [
        {
          name        = cmd
          description = Rrecent command name.
          type        = string
        }
        {
          name        = args
          description = Recent command arguments. Empty string if no argue mend supplied.
          type        = string
        }
        {
          name        = caller
          description = Recent command caller (if available).
          type        = string
        }
        {
          name        = runId
          description = Run ID associated with the recent command.
          type        = integer 
        }
        {
          name        = ack
          description = Recent command acknowledgement status.
          enum        = [ ACCEPTED, REJECTED ]
        }
        {
          name        = ackMsg
          description = Recent command acknowledgement message. Empty string if acknowledgement is ACCEPTED.
          type        = string
        }
        {
          name        = comp
          description = Recent command completion status.
          enum        = [ INPROGRESS, SUCCESS, FAILED, INTERRUPTED, REJECTED ]
        }
        {
          name        = compMsg
          description = Recent command completion message. Empty string if completion is INPROGRESS or SUCCESS.
          type        = string
        }
      ]
    }

#-----------------------------------------------------------------------
# event:temperature

    {
      name            = temperature
      description     = "PWFS temperature. (engineering)"
      attributes      = [
        {
          name        = detector
          description = "Detector temperature"
          type        = float
          units       = degrees Celsius
        }
        {
          name        = TEC
          description = "TEC hot side temperature"
          type        = float
          units       = degrees Celsius
        }
        {
          name        = electronics
          description = "Electronics temperature"
          type        = float
          units       = degrees Celsius
        }
        {
          name        = exchanger
          description = "Heat exchanger bulk temperature"
          type        = float
          units       = degrees Celsius
        }
      ]
    }
  
  ] 
  
#-----------------------------------------------------------------------
# alarms

  alarms = [
    {
      name = watchdog
      description = """Assembly has become unresponsive <br><br>
                    <b>Probable Cause:</b> Software bug.<br>
                    (LATCHED=true) <br>
                    (ACTION=
                    <ul>
                        <li><b>Major:</b> Re-start the assembly and file a bug report. </li>
                    </ul>)"""
      severity = major
      archive = true
    }

    {
     name = temperature
      description = """PWFS temperature is outside acceptable limits.  This may result in damaged equipment or electronics failure. <br><br>
                    <b>Probable Cause:</b> The cooling system is not functioning correctly. <br>
                    (LATCHED=false) <br>
                    (ACTION=
                    <ul>
                        <li><b>Major:</b> Shutdown WFS and review operation of the cooling system to ensure it is functioning properly. </li>
                        <li><b>Minor:</b> Review operation of the cooling system to ensure it is functioning properly. </li>
                    </ul>)"""
      severity = major
      archive = true
    }
  ]

}
