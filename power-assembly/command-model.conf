subsystem = NFIRAOS
component = power

description = Power Assembly commands.

receive = [
  
  {
    name            = init
    description     = """Prepares the assembly for operation and reads configuration files. 

If configName and configVersion are not specified in the input, then the default configuration name and version will be used. If only configName is specified in the input, then the default version for the specified configName will be used. If only configVersion is specified in the input, then an error is returned.

*Simple Command.*

Precondition:
<ul>
<li> none
</ul>
Execution:
<ul>
<li> state.cmd = BUSY
</ul>
At Completion:
<ul>
<li> state.cmd = READY
</ul>"""
    args = [
       {
        name        = configName 
        description = Name of the configuration file to get from the TMT Configuration Service
        type        = string
      }
      {
        name        = configVersion
        description = Version of the configuration file to get from the TMT Configuration Service
        type        = string 
      }
    ]
  }

  {
    name            = setOutlet
    description     = """Sets the power state (ON|OFF) of an outlet on a NCC power bar.

*Simple Command.*
  
Precondition:
<ul>
<li> state.cmd = READY 
</ul>
Execution:
<ul>
<li> state.cmd = BUSY
</ul>
At Completion:
<ul>
<li> state.cmd = READY
</ul>"""
    args = [
      {
        name        = outlet
        description = outlet id
        enum        = [ 1, 2, 3, 4, 5, 6, 7, 8 ]
      }
      {
        name        = bar
        description = power bar id
        enum        = [ 1, 2, 3, 4, 5, 6 ]
      }
      {
        name        = state
        description = target power state of the specified outlet
        enum        = [ ON, OFF ]
      }
    ]
    requiredArgs = [ outlet, bar, state ]
  }

  {
    name            = setDevice
    description     = """Sets the power state (ON|OFF) of an device plugged into a NCC power bar.

*Simple Command.*
  
Precondition:
<ul>
<li> state.cmd = READY 
</ul>
Execution:
<ul>
<li> state.cmd = BUSY
</ul>
At Completion:
<ul>
<li> state.cmd = READY
</ul>"""
    args = [
      {
        name        = device
        description = unique device string as specified in the configuration file
        type        = string
      }
      {
        name        = state
        description = target power state of the specified outlet
        enum        = [ ON, OFF ]
      }
    ]
    requiredArgs = [ device, state ]
  }


  {
    name            = hibernate
    description     = """Turn off all unused outlets and outlets corresponding non-essential devices in NFIRAOS (i.e. those with a type equal to INACTIVE or HIBERNATE). 

This command is intended to be used at the end of the night.

*Simple Command.*

Precondition:
<ul>
<li> state.cmd = READY 
</ul>
Execution:
<ul>
<li> state.cmd = BUSY
</ul>
At Completion:
<ul>
<li> state.cmd = READY
</ul>"""
  }

  {
    name            = wake
    description     = """Turn on all outlets corresponding to devices in NFIRAOS (i.e. those with a type equal to ACTIVE or HIBERNATE). 

This command is intended to be used at the beginning of the night.

*Simple Command.*

Precondition:
<ul>
<li> state.cmd = READY 
</ul>
Execution:
<ul>
<li> state.cmd = BUSY
</ul>
At Completion:
<ul>
<li> state.cmd = READY
</ul>"""
  }

]

