subsystem = NFIRAOS
component = power

description = Power Assembly commands.

receive = [
  
  {
    name            = init
    description     = """
Request Command.

Prepares the assembly for operation and reads configuration files. The configuration name must be specified if a configuration version is specified. 

The configuration file will contain:
<ul>
<li> default power state for each outlet (on|off|noChange)
<li> unique device string for each outlet
</ul>

If configName and configVersion are not specified in the input, then the default configuration name and version will be used. If only configName is specified in the input, then the default version for the specified configName will be used. If only configVersion is specified in the input, then an error is returned.

Precondition:
<ul>
<li> none
</ul>
Execution:
<ul>
<li> state.cmd = busy
<li> state.move = unindexed | indexed
</ul>
At Completion:
<ul>
<li> state.cmd = ready
</ul>
    """
    args = [
       {
        name        = configName 
        description = Name of the configuration file to get from the TMT Configuration Service
        type        = string
      }
      {
        name        = configVersion
        description = Version of the configuration file to get from the TMT Configuration Service
        type        = string 
      }
    ]
  }

  {
    name            = datum
    description     = """
Request Command.

Sets all outlets to their default power state. 
  
Precondition:
<ul>
<li> state.cmd = ready | error
</ul>
Execution:
<ul>
<li> state.cmd = busy
</ul>
At Completion:
<ul>
<li> state.cmd = ready
</ul>
    """
  }

  {
    name            = setOutlet
    description     = """
Request Command.

Sets the power state (on|off) of an outlet on a NCC power bar.
  
Precondition:
<ul>
<li> state.cmd = ready | error
</ul>
Execution:
<ul>
<li> state.cmd = busy
</ul>
At Completion:
<ul>
<li> state.cmd = ready
</ul>
    """
    args = [
      {
        name        = outlet
        description = outlet id
        enum        = [ 1, 2, 3, 4, 5, 6, 7, 8 ]
      }
      {
        name        = bar
        description = power bar id
        enum        = [ 1, 2, 3, 4, 5, 6 ]
      }
      {
        name        = state
        description = target power state of the specified outlet
        enum        = [ on, off ]
      }
    ]
    requiredArgs = [ outlet, bar, state ]
  }

  {
    name            = setDevice
    description     = """
Request Command.

Sets the power state (on|off) of an device plugged into a NCC power bar.
  
Precondition:
<ul>
<li> state.cmd = ready | error
</ul>
Execution:
<ul>
<li> state.cmd = busy
</ul>
At Completion:
<ul>
<li> state.cmd = ready
</ul>
    """
    args = [
      {
        name        = device
        description = unique device string as specified in the configuration file
        type        = string
      }
      {
        name        = state
        description = target power state of the specified outlet
        enum        = [ on, off ]
      }
    ]
    requiredArgs = [ device, state ]
  }

]

