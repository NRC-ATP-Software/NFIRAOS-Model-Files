subsystem = NFIRAOS
component = rtc

publish {
  telemetry = [
    {
      name            = state
      description     = "RTC assembly state"
      attributes      = [
        {
          name        = cmd
          description = "RTC assembly command state"
          enum        = [ uninitialized, ready, busy, error ]
        }
        {
          name        = config
          description = "flag indicating if the RTC has been configured"
          type        = boolean
        }
        {
          name        = shutdown
          description = "flag indicating if the RTC software has be properly shutdown"
          type        = boolean
        }
        {
          name        = unsaved
          description = "flag indicating if any configuration parameters have been changed, via a GUI or engineering command, but has not yet been saved."
          type        = boolean
        }
        {
          name        = m1Scallop
          description = "flag indicating if the M1 scalloping mode is being published for the TCS"
          type        = boolean
        }

        {
          name        = errMsg
          description = "RTC error description, empty string if there are no errors."
          type        = string
        }
      ]
    }
  
    {
      name            = atm
      description     = "estimated atmospheric parameters"
      maxRate         = 0.1
      archive         = true
      attributes      = [
        {
          name        = r0
          description = "fried parameter (r<sub>0</sub>)"
          type        = float
          units       = m
        }
        {
          name        = l0
          description = "turbulence outer scale (L<sub>0</sub>)"
          type        = float
          units       = m
        }
        {
          name        = tau0
          description = "coherence time (&tau;<sub>0</sub>)"
          type        = float
          units       = seconds
        }

      ]
    }

    {
      name            = atmSlodar
      description     = "SLODAR estimates of turbulence strength in LGS mode only"
      maxRate         = 0.1
      archive         = true
      attributes      = [
        {
          name        = theta0
          description = "isoplanatic angle (&theta;<sub>0</sub>)"
          type        = float
          units       = "mas"
        }
        {
          name        = theta2
          description = "generalized isoplanatic angle (&theta;<sub>2</sub>)"
          type        = float
          units       = mas
        }
        {
          name        = Cn2
          description = "C<sub>n<sup>2</sup></sub> turbulence profile (p)"
          type        = array
          dimensions: [12]
          items = {
            type      = float
          }
          units       = "m<sup>-<sup>5</sup>/<sub>3</sub></sup>"
        }
        {
          name        = Cn2bin
          description = "Binned C<sub>n<sup>2</sup></sub> turbulence profile (p')"
          type        = array
          dimensions: [6]
          items = {
            type      = float
          }
          units       = "m<sup>-<sup>5</sup>/<sub>3</sub></sup>"
        }
      ]
    } 


    {
      name            = calibWc
      description     = "Wavefront Corrector steam calibration parameters. Arrays are ordered [DM0 DM11 TTS]."
      archive         = false
      attributes      = [
        {
          name        = avg
          description = "number of commands to average before sending the average to the RPG."
          type        = array
          dimensions: [3]
          items = {
            type      = integer
          }
          minimum     = 1
        }
        {
          name        = mode
          description = "flag indicating if RTC is sending averages commands to the RPG."
          type        = array
          dimensions: [3]
          items = {
            enum      = [ STOP, SINGLE, CONTINUOUS ]
          }
        }
        {
          name        = override
          description = "flag indicating if RTC is accepting override commands from the RPG, for calibration purposes."
          type        = array
          dimensions: [3]
          items = {
            type      = boolean
          }
        }
      ]
    }

    {
      name            = calibDetector
      description     = "Detector pixel & gradient steam calibration parameters. Arrays are ordered [LGSWFSA LGSWFSB LGSWFSC LGSWFSD LGSWFSE LGSWFSF ODGW1 ODGW2 ODGW3 ODGW4 OIWFSA OIWFSB OIWFSC PWFS]."
      archive         = false
      attributes      = [
        {
          name        = gradAvg
          description = "number of gradient frames to average before sending the average to the RPG."
          minimum     = 1
          type        = array
          dimensions: [14]
          items = {
             type     = integer
          }
        }
        {
          name        = gradMode
          description = "flag indicating if RTC is sending averages gradients to the RPG."
          type        = array
          dimensions: [14]
          items = {
            enum      = [ STOP, SINGLE, CONTINUOUS ]
          }
        }
        {
          name        = pixelAvg
          description = "number of pixel frames to average before sending the average to the RPG."
          minimum     = 1
          type        = array
          dimensions: [14]
          items = {
             type     = integer
          }
        }
        {
          name        = pixelMode
          description = "flag indicating if RTC is sending averages pixles to the RPG."
          type        = array
          dimensions: [14]
          items = {
            enum      = [ STOP, SINGLE, CONTINUOUS ]
          }
        }
      ]
    }

    {
      name            = config
      description     = "configuration information"
      archive         = true
      attributes      = [
        {
          name        = name
          description = "current configuration name used to query the TMT Configuration Service"
          type        = string
        }
        {
          name        = version
          description = "current configuration version used to query the TMT Configuration Service"
          type        = string
        }
        {
          name        = rateHo
          description = "high-order loop rate. In LGS mode this is equal to the LGS WFS frame rate. In NGS or SL mode this is equal to the PWFS frame rate."
          type        = float
          units       = Hz
        }
        {
          name        = rateLo
          description = "low-order loop rate. This is equal to the Tier 1 and 2 steady-state frame rate."
          type        = float
          units       = Hz
        }
        {
          name        = rateLot
          description = "low-order truth loop rate. This is equal to the Tier 3 and 3F steady-state frame rate."
          type        = float
          units       = Hz
        }
        {
          name        = rateWc
          description = "wavefront correction. In LGS mode this should be at least equal to the LGS WFS frame rate (i.e. the high-order rate). In NGS mode this should be at least equal to the PWFS frame rate (i.e. the high-order rate). In SL mode his should be at least to the Tier 1 and 2 steady-state frame rate (i.e. the low-order rate)."
          type        = float
          units       = Hz
        }
        {
          name        = tier1
          description = "Tier 1 detector assignment"
          enum        = [ PWFS, OIWFSA, OIWFSB, OIWFSC ]
        }
        {
          name        = tier2
          description = "Tier 2 detector assignment. The array is ordered Tier 2 [A B]."
          type        = array
          dimensions: [2]
          items = {
            enum      = [ NONE, PWFS, OIWFSA, OIWFSB, OIWFSC, ODGW1, ODGW2, ODGW3, ODGW4 ]
          }
        }
        {
          name        = tier3
          description = "Tier 3 detector assignment. The array is ordered Tier 3 [A B C D]."
          type        = array
          dimensions: [4]
          items = {
            enum      = [ NONE, OIWFSA, OIWFSB, OIWFSC, ODGW1, ODGW2, ODGW3, ODGW4 ]
          }
        }
        {
          name        = tier3f
          description = "Tier 3F detector assignment"
          enum        = [ NONE, OIWFSA, OIWFSB, OIWFSC ]
        }
      ]
    }

    {  
      name            = inst
      description     = instrument field rotation error
      maxRate         = 20
      archive         = true
      attributes      = [
        {
          name        = rot
          description = "residual error field rotation [&delta;&theta;]"
          type        = double
          units       = "degree in the XY plane of the FCRS<sub>174.5</sub>. A positive rotation is defined as counterclockwise from X axis to Y axis."
        }
      ]
    }

    {
      name            = lgsFocus
      description     = "LGS focus error for the NCC to adjust the position of the LGS trombone mechanism"
      maxRate         = 3.33
      archive         = true
      attributes      = [
        {
          name        = error
          description = LGS focus error (z<sub>b</sub>)
          type        = double
          units       = "&mu;m of RMS wavefront error in FCRS<sub>174.5</sub>"
        }
        {
          name        = wfs
          description = "LGS focus error per WFS. The arrays is ordered LGS WFS [A B C D E F]."
          type        = array
          dimensions: [6]
          items = {
            type        = double
          }
          units       = "&mu;m of RMS wavefront error in FCRS<sub>174.5</sub>"
        }
      ]
    }

    {
      name            = lgsState
      description     = "LGS state. Arrays are ordered LGS WFS [A B C D E F]."
      archive         = true
      attributes      = [
        {
          name        = enable
          description = flag indicating is LGS WFS has been configured as enabled
          type        = array
          dimensions: [6]
          items = {
            type      = boolean
          }
        }
        {
          name        = fluxHigh
          description = number of high-flux subaps
          type        = array
          dimensions: [6]
          items = {
            type      = integer
          }
          minimum     = 0
        }
        {
          name        = fluxLow
          description = number of low-flux subaps
          type        = array
          dimensions: [6]
          items = {
            type      = integer
          }
          minimum     = 0
        }
        {
          name        = algo
          description = current LGS gradient algorithm
          type        = array
          dimensions: [6]
          items = {
            enum      = [ COG_STATIC, MF_STATIC, MF_COG, MF_UPDATE, NONE ]
          }
        }
        {
          name        = tt
          description = "Configured tip/tilt control for LGSF FSM."
          enum        = [ INTEGRATOR, KALMAN ]
        }
      ]
    }

    {
      name            = lgsfPointOffset
      description     = "The mispointing offload value for the LGSF laser launch telescope based on rayleigh backscattering measurements."
      maxRate         = 1
      archive         = true
      attributes      = [
        {
          name        = x
          description = x mispointing error
          type        = float
          units       = "arcsec on the sky of x mispointing in FCRS<sub>174.5</sub>"
        }
        {
          name        = y
          description = y mispointing error
          type        = float
          units       = "arcsec on the sky of y mispointing in FCRS<sub>174.5</sub>"
        }

      ]
    }

    {
      name            = loop
      description     = "Control loop states."
      archive         = true
      attributes      = [
        {
          name        = ho
          description = """State of the high-order (HO) wavefront correction loop. 
<ul>
<li> IDLE - HO loop is not active
<li> LOST - at least one active LGS WFS frame is lost, therefore no high-order correction
<li> ACQUIRE - HO loop is active but has not settled (TBC)
<li> LOCK - HO loop has settled
</ul>"""
          enum        = [ IDLE, LOST ACQUIRE, LOCK ]
        }
        {
          name        = lgsFocus
          description = """State of the LGS Trombone Focus offloading loop.
<ul>
<li> IDLE - RTC is not offloading focus
<li> LOST - a LGS spot can not be  detect on at least one active LGS WFS, therefore no offloading
<li> ACQUIRE - RTC is offloading focus, but focus error is above the configured focus threshold (lgs.focus.threshold)
<li> LOCK - RTC is offloading focus and focus error is below the configured focus threshold (lgs.focus.threshold)
</ul>"""
          enum        = [ IDLE, LOST, ACQUIRE, LOCK ]
        }
        {
          name        = lgsFocusFilter
          description = """State of the LGS Focus filter applied to the high-order gradients.
<ul>
<li> ALL -
<li> NO - 
<li> LOW - 
</ul>"""
          enum        = [ ALL, NO, LOW ]
        }

        {
          name        = lgsDither
          description = """flag indicating the state of LGS WFS dithering in the RTC. 
<ul>
<li> NONE - the RTC will not dither the DM (LGS purposes) nor the LGSF FSMs.
<li> CP - the RTC is currently applying the CP DM dither signal. This dither signal can be enabled independently of the high and low-order loops (see ao.nfiraos.rtc.loop.ho and ao.nfiraos.rtc.loop.lo).
<li> NCP - the RTC is currently applying a LGSF FSM dither signal, which can be enabled independently of the LGSF control loop (see ao.nfiraos.rtc.loop.lgsf)
</ul>"""
          enum        = [ CP, NCP, NONE ]
        }
        {
          name        = lgsTt
          description = """State of the LGS TT control loop that drive the LGSF FSM, this does not include the application of dither signal which can be enabled independently (see published item ao.nfiraos.rtc.loop.lgs.dither). The array is ordered LGSF FSM [A B C D E F].
<ul>
<li> IDLE - RTC is not sending FSM commands
<li> LOST - FSM command is lost, previous FSM command will be use 
<li> ACQUIRE - RTC is sending FSM commands, but TT error is above the configured TT threshold (lgsf.threshold)
<li> LOCK - RTC is sending FSM commands and TT error is below the configured TT threshold (lgsf.threshold)
</ul>"""
          type        = array
          dimensions: [6]
          items = {
            enum      = [ IDLE, LOST, ACQUIRE, LOCK ]
          }
        }
        {
          name        = lo
          description = """Combined state of all low-order tiers (see ao.nfiraos.rtc.loop.tier*)
<ul>
<li> IDLE - all LO tiers are IDLE 
<li> LOST - at least one LO tier is LOST
<li> ACQUIRE - at least one LO tier is ACQUIRE, but no LO tier is LOST
<li> DITHER - at least one LO tier is DITHER, but no LO tier is LOST or ACQUIRE 
<li> LOCK_PARTIAL - at least one LO tier is LOCK, all other LO tiers are LOCK or IDLE
<li> LOCK - all active tiers are LOCK 
</ul>
The overall state is set following these rules of president (in order):
<ul>
<li> LO state is LOST if any tier state is LOST
<li> LO state is ACQUIRE if any tier state is ACQUIRE
<li> LO state is DITHER if any tier state is DITHER
<li> LO state is LOCK if all active tier states are LOCK
<li> LO state is LOCK_PARTIAL if any tier state is LOCK
<li> else LO state is IDLE
</ul>"""
          enum        = [ IDLE, LOST, ACQUIRE, DITHER, LOCK, LOCK_PARTIAL ]
        }
        {
          name        = loFilter
          description = "current temporal filter type used for each LO mode. The array is ordered LO mode [ Tip, Tilt, Focus, Plate Scale X, Plate Scale Y, Plate Scale 45 ]"
          type        = array
          dimensions: [6]
          items = {
            enum        = [ NONE, TYPE1, TYPE2, KALMAN  ]
          }
        }
        {
          name        = oiwfsOffloadAcq
          description = "flag indicating if POA offload will occur while an OIWFS is still acquiring. The array is ordered OIWFS [A B C]"
          type        = array
          dimensions: [3]
          items = {
            type        = boolean
          }
        }
        {
          name        = oiwfsPoa
          description = """state of the offload to the OIWFS POAs. The array is ordered OIWFS [A B C].
<ul>
<li> IDLE - RTC not offloading to OIWFS POA 
<li> LOST - the OIWFS frame is lost, therefore no offloading 
<li> ACQUIRE - OIWFS is (re)acquiring, offloading may occur depending on setting of ao.nfiraos.rtc.loop.oiwfs.offloadAcq
<li> DITHER - telescope is dithering, offloading temporally halted 
<li> LOCK - guide star lock and offloading OIWFS POA 
</ul>"""
          type        = array
          dimensions: [3]
          items = {
            enum      = [ IDLE, LOST, ACQUIRE, DITHER, LOCK ]
          }
        }
        {
          name        = pwfsDither 
          description = """flag indicating the state of PWFS dithering in the RTC. 
<ul>
<li> NONE - then the RTC will not dither the DM (for PWFS purposes) and will ignore the NGS FSM position stream.
<li> CP - the RTC assumes the NGS FSM is being dither and will listen to the NGS FSM position stream from the NCC for dither signal estimation.
<li> NCP - the RTC is currently applying the CP DM dither signal. This dither signal can be enabled independently of the high and low-order loops.
</ul>"""
          enum        = [ CP, NCP, NONE ]
        }
        {
          name        = pwfsOffloadAcq
          description = "flag indicating if SSM offload will occur while the PWFS is still acquiring."
          type        = boolean
        }
        {
          name        = pwfsSsm 
          description = """state of the offload to the visible NGS (i.e. PWFS) SSM.
<ul>
<li> IDLE - RTC not offloading to SSM
<li> LOST - PWFS frame is lost, therefore no offloading
<li> ACQUIRE - PWFS is (re)acquiring, offloading may occur depending on setting of ao.nfiraos.rtc.loop.pwfs.offloadAcq
<li> DITHER - telescope is dithering, offloading temporally halted
<li> LOCK - guide star lock and offloading SSM
</ul>"""
          enum        = [ IDLE, LOST, ACQUIRE, DITHER, LOCK ]
        }
        {
          name        = twfs
          description = """State of the LGS TWFS reference vector update process.
<ul>
<li> IDLE - RTC not update TWFS reference vector
<li> LOST - PWFS frame is lost, therefore no TWFS reference vector updates
<li> ACQUIRE - PWFS is (re)acquiring, therefore no TWFS reference vector updates
<li> DITHER - telescope is dithering, therefore no TWFS reference vector updates
<li> LOCK - guide star lock and TWFS reference vector is being updated
</ul>"""
          enum        = [ IDLE, LOST, ACQUIRE, DITHER, LOCK ] 
        }
        {
          name        = ready
          description = "A flag indicating if the RTC pipeline is ready to close loops. If TRUE then pixel processing has started and the DMs and TTS are being driven to current shape in the main integrator"
          type        = boolean
        }
        {
          name        = tier0
          description = """State of a PWFS Tier 0 wavefront correction loop
<ul>
<li> IDLE - tier is inactive
<li> LOST - tier frame is lost and not contributing to low-order correction
<li> ACQUIRE - tier is (re)acquiring \n
<li> DITHER - telescope is dithering, tier may be either (re)acquiring or locked on guide star
<li> LOCK - tier is locked on guide star
</ul>"""
          enum        = [ IDLE, LOST, ACQUIRE, DITHER, LOCK ]
        }
        {
          name        = tier1
          description = """State of a LO Tier 1 wavefront correction loop
<ul>
<li> IDLE - tier is inactive
<li> LOST - tier frame is lost and not contributing to low-order correction
<li> ACQUIRE - tier is (re)acquiring \n
<li> DITHER - telescope is dithering, tier may be either (re)acquiring or locked on guide star
<li> LOCK - tier is locked on guide star
</ul>"""
          enum        = [ IDLE, LOST, ACQUIRE, DITHER, LOCK ]
        }
        {
          name        = tier2
          description = """State of a LO Tier 2 wavefront correction loop.The array is ordered Tier 2 [A B].
<ul>
<li> IDLE - tier is inactive
<li> LOST - tier frame is lost and not contributing to low-order correction
<li> ACQUIRE - tier is (re)acquiring \n
<li> DITHER - telescope is dithering, tier may be either (re)acquiring or locked on guide star
<li> LOCK - tier is locked on guide star
</ul>"""
          type        = array
          dimensions: [2]
          items = {
            enum        = [ IDLE, LOST, ACQUIRE, DITHER, LOCK ]
          }
        }
        {
          name        = tier3
          description = """State of a LOT Tier 3 wavefront correction loop. The array is ordered Tier 3 [A B C D].
<ul>
<li> IDLE - tier is inactive
<li> LOST - tier frame is lost and not contributing to low-order correction
<li> ACQUIRE - tier is (re)acquiring \n
<li> DITHER - telescope is dithering, tier may be either (re)acquiring or locked on guide star
<li> LOCK - tier is locked on guide star
</ul>"""
          type        = array
          dimensions: [4]
          items = {
            enum        = [ IDLE, LOST, ACQUIRE, DITHER, LOCK ]
          }
        }
        {
          name        = tier3f
          description = """State of a LOT Tier 3 wavefront correction loop
<ul>
<li> IDLE - tier is inactive
<li> LOST - tier frame is lost and not contributing to low-order correction
<li> ACQUIRE - tier is (re)acquiring \n
<li> DITHER - telescope is dithering, tier may be either (re)acquiring or locked on guide star
<li> LOCK - tier is locked on guide star
</ul>"""
          enum        = [ IDLE, LOST, ACQUIRE, DITHER, LOCK ]
        }
      ]
    }

    {
      name            = m1Scallop
      description     = M1 scalloping mode 
      maxRate         = 0.2
      archive         = true
      attributes      = [
        {
          name        = mode 
          description = M1 scalloping mode (m<sub>scall</sub>)
          type        = float
          units       = "RMS nanometer of wavefront in FCRS<sub>174.5</sub>"
        }
        {
          name        = time
          description = timestamp
          type        = double
          units       = MJD
        }
      ]
    }

    {
      name            = odgwImage
      description     = "ODGW ellipticity correction stream. Arrays are ordered ODGW [1 2 3 4]."
      maxRate         = 0.3
      archive         = true
      attributes      = [
        {
          name        = ellip
          description = "ellipticity value based on the averaged spot ellipticity profile, i.e., ratio between &sigma;<sub>1</sub> and &sigma;<sub>2</sub> of the ellipse." 
          type        = array
          dimensions: [4]
          items = {
            type      = float
          }
          units       = pixel
        }
        {
          name        = size1
          description = "image size 1 (&sigma;<sub>1</sub>) based on the averaged spot ellipticity profile, i.e. X axis width of the elliptical Gaussian image in the unrotated elliptical coordinate system."
          type        = array
          dimensions: [4]
          items = {
            type      = float
          }
          units       = pixel
        }
        {
          name        = size2
          description = "image size 2 (&sigma;<sub>2</sub>) based on the averaged spot ellipticity profile, i.e. Y axis width of the elliptical Gaussian image in the unrotated elliptical coordinate system."
          type        = array
          dimensions: [4]
          items = {
            type      = float
          }
          units       = pixel
        }
        {
          name        = rot
          description = "image rotation angle between the unrotated elliptical coordinate system and the local detector coordinate system. This is the angle between the ellipse &sigma;<sub>1</sub> axis (i.e. unrotated X axis) and the local detector coordinate system X axis. A positive rotation is defined as counterclockwise from local detector coordinate system X axis to the Y axis." 
          type        = array
          dimensions: [4]
          items = {
            type      = float
          }
          units       = radian
        }
      ]
    }

    {
      name            = odgwState
      description     = "ODGW state. Arrays are ordered ODGW [1 2 3 4]."
      archive         = true
      attributes      = [
        {
          name        = enable
          description = flag indicating is ODGW has been configured as enabled
          type        = array
          dimensions: [4]
          items = {
            type      = boolean
          }
        }
        {
          name        = fluxHigh
          description = ODGW high-flux flag
          type        = array
          dimensions: [4]
          items = {
            type      = boolean
          }
          minimum     = 0
        }
        {
          name        = fluxLow
          description = ODGW low-flux flag
          type        = array
          dimensions: [4]
          items = {
            type      = boolean
          }
          minimum     = 0
        }
        {
          name        = algo
          description = current ODGW gradient algorithm 
          type        = array
          dimensions: [4]
          items = {
            enum      = [ COG_STATIC, MF_STATIC, MF_COG, MF_UPDATE, BP, NONE ]
          }
        }
      ]
    }

    {
      name            = oiwfsImage
      description     = "OIWFS ellipticity correction stream. Arrays are ordered OIWFS [A B C]."
      maxRate         = 0.3
      archive         = true
      attributes      = [
        {
          name        = ellip
          description = "ellipticity value based on the averaged spot ellipticity profile, i.e., ratio between &sigma;<sub>1</sub> and &sigma;<sub>2</sub> of the ellipse."
          type        = array
          dimensions: [3]
          items = {
            type      = float
          }
          units       = pixel
        }
        {
          name        = size1
          description = "image size 1 (&sigma;<sub>1</sub>) based on the averaged spot ellipticity profile, i.e. X axis width of the elliptical Gaussian image in the unrotated elliptical coordinate system."
          type        = array
          dimensions: [3]
          items = {
            type      = float
          }
          units       = pixel
        }
        {
          name        = size2
          description = "image size 2 (&sigma;<sub>2</sub>) based on the averaged spot ellipticity profile, i.e. Y axis width of the elliptical Gaussian image in the unrotated elliptical coordinate system."
          type        = array
          dimensions: [3]
          items = {
            type      = float
          }
          units       = pixel
        }
        {
          name        = rot
          description = "image rotation angle between the unrotated elliptical coordinate system and the local detector coordinate system. This is the angle between the ellipse &sigma;<sub>1</sub> axis (i.e. unrotated X axis) and the local detector coordinate system X axis. A positive rotation is defined as counterclockwise from local detector coordinate system X axis to the Y axis." 
          type        = array
          dimensions: [3]
          items = {
            type      = float
          }
          units       = degree
        }
      ]
    }
    
    {
      name            = oiwfsPoa
      description     = "OIWFS POA offset (o<sub>POA</sub>). Arrays are ordered OIWFS [A B C]."
      maxRate         = 20
      minRate         = 0
      archive         = true
      attributes      = [
        {
          name        = tip
          description = OIWFS tip error
          type        = array
          dimensions: [3]
          items = {
            type      = double
          }
          units       = "Arcsec on the sky in FCRS<sub>174.5</sub>"
        }
        {
          name        = tilt
          description = OIWFS tilt error
          type        = array
          dimensions: [3]
          items = {
            type      = double
          }
          units       = "Arcsec on the sky in FCRS<sub>174.5</sub>"
        }
        {
          name        = rate
          description = "The rate at which the OIWFS tip/tilt errors offloading parameter is updated"
          type        = float
          minimum     = 0
          maximum     = 20
          units       = Hz
        }
      ]
    }

    {
      name            = oiwfsState
      description     = "OIWFS state. Arrays are ordered OIWFS [A B C]."
      archive         = true
      attributes      = [
        {
          name        = enable
          description = flag indicating is OIWFS has been configured as enabled
          type        = array
          dimensions: [3]
          items = {
            type      = boolean
          }
        }
        {
          name        = fluxHigh
          description = OIWFS high-flux flag
          type        = array
          dimensions: [3]
          items = {
            type      = boolean
          }
          minimum     = 0
        }
        {
          name        = fluxLow
          description = OIWFS low-flux flag
          type        = array
          dimensions: [3]
          items = {
            type      = boolean
          }
          minimum     = 0
        }
        {
          name        = algo
          description = current OIWFS gradient algorithm 
          type        = array
          dimensions: [3]
          items = {
            enum      = [ COG_STATIC, MF_STATIC, MF_COG, MF_UPDATE, BP, NONE ]
          }
        }
      ]
    }

    {
      name            = pixelLgs
      description     = "LGS WFS pixel stream connection information. Arrays are ordered LGS WFS quadrant [I II III IV]."
      archive         = false
      attributes      = [
        {
          name        = ipA
          description = IP address for LGS WFS A and LGS WFS A simulator.
          type        = string
        }
        {
          name        = ipB
          description = IP address for LGS WFS B and LGS WFS B simulator.
          type        = string
        }
        {
          name        = ipC
          description = IP address for LGS WFS C and LGS WFS C simulator.
          type        = string
        }
        {
          name        = ipD
          description = IP address for LGS WFS D and LGS WFS D simulator.
          type        = string
        }
        {
          name        = ipE
          description = IP address for LGS WFS E and LGS WFS E simulator.
          type        = string
        }
        {
          name        = ipF
          description = IP address for LGS WFS F and LGS WFS F simulator.
          type        = string
        }
        {
          name        = portA
          description = port number for LGS WFS A.
          type        = array
          dimensions: [4]
          items = {
            type      = integer 
          }
        }
        {
          name        = portB
          description = port number for LGS WFS B.
          type        = array
          dimensions: [4]
          items = {
            type      = integer 
          }
        }
        {
          name        = portC
          description = port number for LGS WFS C.
          type        = array
          dimensions: [4]
          items = {
            type      = integer 
          }
        }
        {
          name        = portD
          description = port number for LGS WFS D.
          type        = array
          dimensions: [4]
          items = {
            type      = integer 
          }
        }
        {
          name        = portE
          description = port number for LGS WFS E.
          type        = array
          dimensions: [4]
          items = {
            type      = integer 
          }
        }
        {
          name        = portF
          description = port number for LGS WFS F.
          type        = array
          dimensions: [4]
          items = {
            type      = integer 
          }
        }
        {
          name        = portSimA
          description = port number for LGS WFS A simulator.
          type        = array
          dimensions: [4]
          items = {
            type      = integer 
          }
        }      
        {
          name        = portSimB
          description = port number for LGS WFS B simulator.
          type        = array
          dimensions: [4]
          items = {
            type      = integer 
          }
        }      
        {
          name        = portSimC
          description = port number for LGS WFS C simulator.
          type        = array
          dimensions: [4]
          items = {
            type      = integer 
          }
        }      
        {
          name        = portSimD
          description = port number for LGS WFS D simulator.
          type        = array
          dimensions: [4]
          items = {
            type      = integer 
          }
        }      
        {
          name        = portSimE
          description = port number for LGS WFS E simulator.
          type        = array
          dimensions: [4]
          items = {
            type      = integer 
          }
        }      
        {
          name        = portSimF
          description = port number for LGS WFS F simulator.
          type        = array
          dimensions: [4]
          items = {
            type      = integer 
          }
        }      
      ]
    }

    {
      name            = pixelOdgw
      description     = "ODGW pixel stream connection information. Arrays are ordered ODGW [1 2 3 4]."
      archive         = false
      attributes      = [
        {
          name        = ip
          description = IP address for ODGW and ODGW simulator.
          type        = string
        }
        {
          name        = port
          description = port number for ODGW.
          type        = array
          dimensions: [4]
          items = {
            type      = integer 
          }
        }
        {
          name        = portSim
          description = port number for ODGW simulator.
          type        = array
          dimensions: [4]
          items = {
            type      = integer 
          }
        }      
      ]
    }

    {
      name            = pixelOiwfs
      description     = "OIWFS pixel stream connection information. Arrays are ordered OIWFS [A B C]."
      archive         = false
      attributes      = [
        {
          name        = ip
          description = IP address for OIWFS and OIWFS simulator.
          type        = string
        }
        {
          name        = port
          description = port number for OIWFS.
          type        = array
          dimensions: [4]
          items = {
            type      = integer 
          }
        }
        {
          name        = portSim
          description = port number for OIWFS simulator.
          type        = array
          dimensions: [4]
          items = {
            type      = integer 
          }
        }      
      ]
    }

    { 
      name            = pixelPwfs
      description     = "PWFS pixel stream connection information. Arrays are ordered PWFS [upper-half lower-half]."
      archive         = false
      attributes      = [
        {
          name        = ip
          description = IP address for PWFS and PWFS simulator.
          type        = string
        }
        {
          name        = port
          description = port number for PWFS.
          type        = array
          dimensions: [2]
          items = {
            type      = integer 
          }
        }
        {
          name        = portSim
          description = port number for PWFS simulator.
          type        = array
          dimensions: [2]
          items = {
            type      = integer 
          }
        }      
      ]
    }

    {
      name            = sim
      description     = simulation flag.
      archive         = true
      attributes      = [
       {
          name        = dm0
          description = "DM0 simulate flag. If set then commands are sent to the simulator IP/port instead of the DM0 IP/port."
          type        = boolean
        }
        {
          name        = dm11
          description = "DM11 simulate flag. If set then commands are sent to the simulator IP/port instead of the DM11 IP/port."
          type        = boolean
        }
        {
          name        = lgs
          description = "LGS WFS pixel simulate flag. If set then pixels are processed from to the simulator port instead of the real LGS WFS port. The array is ordered LGS WFS [A B C D E F]."
          type        = array
          dimensions: [6]
          items = {
            type     = boolean
          }
        }
        {
          name        = lgsf
          description = "LGSF simulate flag. If set then commands are sent to the simulator IP/port instead of the LGSF IP/port."
          type        = boolean
        }
        {
          name        = odgw
          description = "ODGW pixel simulate flag. If set then pixels are processed from to the simulator port instead of the real ODGW port. The array is ordered ODGW [1 2 3 4]."
          type        = array
          dimensions: [4]
          items = {
            type     = boolean
          }
        }
        {
          name        = oiwfs
          description = "OIWFS pixel simulate flag. If set then pixels are processed from to the simulator port instead of the real OIWFS port. The array is ordered OIWFS [A B C]."
          type        = array
          dimensions: [3]
          items = {
            type     = boolean
          }
        }
        {
          name        = pwfs
          description = "PWFS pixel simulate flag. If set then pixels are processed from to the simulator port instead of the real PWFS port."
          type        = boolean
        }
        {
          name        = rpg
          description = "RPG simulate flag. If set then RTC will communicate with the simulated RPG IP/port specified in the configuration file."
          type        = boolean
        }

        {
          name        = tts
          description = "TTS simulate flag. If set then commands are sent to the simulator IP/port instead of the TTS IP/port."
          type        = boolean
        }
        {
          name        = turbulence
          description = "simulated turbulence flag. If set then simulated turbulence from the RPG is injected into the control path on the DMs."
          type        = boolean
        }
      ]
    }

    {
      name            = pwfsPupilShift
      description     = telescope pupil shift due to telescope and NFIRAOS misalignment 
      maxRate         = 1
      archive         = true
      attributes      = [
        {
          name        = x 
          description = "shift of the TMT pupil in the x-direction due to misalignments"
          type        = double
          minimum     = 0
          maximum     = 0.50
          units       = "fraction of pupil diameter in FCRS<sub>174.5</sub>"
        }
        {
          name        = y 
          description = "shift of the TMT pupil in the y-direction due to misalignments"
          type        = double
          minimum     = 0
          maximum     = 0.50
          units       = "fraction of pupil diameter in FCRS<sub>174.5</sub>"
        }
        {
          name        = time
          description = timestamp
          type        = double
          units       = MJD
        }
      ]
    }

    {
      name            = pwfsSsm
      description     = "low-pass filtered PWFS tip/tilt/focus error o<sub>SSM</sub> for the NCC to adjust the position of the visible path SSM"
      maxRate         = 20
      minRate         = 0
      archive         = true
      attributes      = [
        {
          name        = tip
          description = PWFS tip error
          type        = double
          units       = "Arcsec on the sky in FCRS<sub>174.5</sub>"
        }
        {
          name        = tilt
          description = PWFS tilt error
          type        = double
          units       = "Arcsec on the sky in FCRS<sub>174.5</sub>"
        }
        {
          name        = focus
          description = PWFS focus error
          type        = double
          units       = "&mu;m of RMS wavefront error in FCRS<sub>174.5</sub>"
        }
        {
          name        = rate
          description = "The rate at which the PWFS tip/tilt/focus errors offloading parameter is updated"
          type        = float
          minimum     = 0
          maximum     = 20
          units       = Hz
        }
      ]
    }
    
    {
      name            = pwfsState
      description     = "PWFS state."
      archive         = true
      attributes      = [
        {
          name        = flux.high
          description = number of high-flux subaps (where a subap is a set of four quadrant pixels)
          type        = integer
          minimum     = 0
        }
        {
          name        = flux.low
          description = number of low-flux subaps (where a subap is a set of four quadrant pixels)
          type        = integer
          minimum     = 0
        }
        {
          name        = algo
          description = current PWFS gradient algorithm
          enum        = [ COG_STATIC, GOG_UPDATE, BP, NONE ]
        }
      ]
    }

    {
      name            = telOffloadTt
      description     = "tip/tilt telescope offloading"
      maxRate         = 20
      minRate         = 0.1
      archive         = true
      attributes      = [
        {
          name        = x
          description = tip mode
          type        = float
          units       = "Arcsec on the sky in FCRS<sub>174.5</sub>"
        }
        {
          name        = y
          description = tilt mode
          type        = float
          units       = "Arcsec on the sky in FCRS<sub>174.5</sub>"
        }
        {
          name        = rate
          description = "the rate at which this telescope TT offloading parameter is updated"
          type        = float
          minimum     = 0
          maximum     = 20
          units       = Hz
        }
        {
          name        = time
          description = timestamp
          type        = double
          units       = MJD
        }
      ]
    }

    {
      name            = telOffloadFocus
      description     = "focus telescope offloading"
      maxRate         = 20
      minRate         = 0.1
      archive         = true
      attributes      = [
        {
          name        = focus
          description = focus mode
          type        = float
          units       = "&mu;m of RMS on the sky in FCRS<sub>174.5</sub>"
        }
        {
          name        = rate
          description = "the rate at which this telescope TT offloading parameter is updated"
          type        = float
          minimum     = 0
          maximum     = 20
          units       = Hz
        }
        {
          name        = time
          description = timestamp
          type        = double
          units       = MJD
        }
      ]
    }

    {
      name            = telOffloadMode
      description     = "mode telescope offloading"
      maxRate         = 20
      minRate         = 0.1
      archive         = true
      attributes      = [
        {
          name        = comaX
          description = x coma mode
          type        = float
          units       = "&mu;m of RMS on the sky in FCRS<sub>174.5</sub>"
        }
        {
          name        = commaY
          description = x coma mode
          type        = float
          units       = "&mu;m of RMS on the sky in FCRS<sub>174.5</sub>"
        }
        {
          name        = m1
          description = M1 modes
          type = array
          dimensions: [100]
          items = {
             type     = float
          }
          units       = "nm of RMS wavefront error in FCRS<sub>174.5</sub>"
        }
        {
          name        = magnification
          description = "The magnification plate scale error is relative to the telescope prescription (TBC)"
          type        = float
          minimum     = -0.01
          maximum     = 0.01
          units       = "fractional error of image scale relative to the designed telescope prescription"
        }
        {
          name        = rate
          description = "the rate at which this telescope TT offloading parameter is updated"
          type        = float
          minimum     = 0
          maximum     = 20
          units       = Hz
        }
        {
          name        = time
          description = timestamp
          type        = double
          units       = MJD
        }
      ]
    }
        
  ] 
  
  alarms = [
    {
      name = heartbeat
      description = RTC assembly (on TED server) heartbeat alarm 
      severity = major
      archive = true
    }
    {
      name = heartbeat.hop
      description = HOP server heartbeat alarm 
      severity = major
      archive = true
    }
    {
      name = heartbeat.wcc
      description = WCC server heartbeat alarm 
      severity = major
      archive = true
    }
    {
      name = heartbeat.pts
      description = PTS server heartbeat alarm 
      severity = major
      archive = true
    }
  ]

}
