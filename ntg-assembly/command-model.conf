subsystem = NFIRAOS
component = ntg

description = NTG Assembly commands.

receive = [
  
  {
    name            = init
    description     = """
Request Command.

Prepares the assembly for operation and reads configuration files. The configuration name must be specified if a configuration version is specified. This command will internally trigger a stop if required.

If the configuration name is not specified, then a default configuration name and version is used. If the configuration version is not specified, then the default version is used for the specified configuration name.
  
Precondition:
<ul>
<li> none
</ul>
Execution:
<ul>
<li> state.cmd = busy
<li> state.move = unindexed | indexed
</ul>
At Completion:
<ul>
<li> state.cmd = ready
<li> state.deploy = unknown
</ul>
    """
    args = [
       {
        name        = configuration name 
        description = Name of the configuration file to get from the TMT Configuration Service
        type        = string
      }
      {
        name        = configuration version
        description = Version of the configuration file to get from the TMT Configuration Service
        type        = string 
      }
    ]
  }

  {
    name            = datum
    description     = """
Submit Command.

Datum the NTG stage. This command will internally trigger a stop if required.
  
Precondition:
<ul>
<li> state.cmd != uninitialized
</ul>
Execution:
<ul>
<li> state.cmd = busy
<li> state.move = indexing
</ul>
At Completion:
<ul>
<li> state.cmd = ready
<li> state.move = indexed
<li> state.deploy = false
</ul>
    """
  }

  {
    name            = stop
    description     = """
Request Command.

Cancel the current submit type command and stops the NTG stage.
  
Precondition:
<ul>
<li> state.cmd != uninitialized
</ul>
Execution:
<ul>
<li> state.cmd = busy
</ul>
At Completion:
<ul>
<li> state.cmd = ready
<li> state.move = unindexed | indexed
<li> state.deploy = true | false
</ul>
    """
  }

  {
    name            = move
    description     = """
Submit Command.

Engineering command to moves the NTG stage to the specified position.
  
Precondition:
<ul>
<li> state.cmd != uninitialized
<li> state.move = indexed | moving
</ul>
Execution:
<ul>
<li> state.cmd = busy
<li> state.move = moving
</ul>
At Completion:
<ul>
<li> state.cmd = ready
<li> state.move = indexed
<li> state.deploy = true | false
</ul>
    """
    args = [
      {
        name        = pos
        description = target NTG stage position.
        type        = double
        units       = mm
      }
    ]
  }


  {
    name            = extract
    description     = """
Submit Command.

Extract NTG stage from the optical path. This command will also stop the following mode.
  
Precondition:
<ul>
<li> state.cmd != uninitialized
<li> state.move = indexed | moving
</ul>
Execution:
<ul>
<li> state.cmd = busy
<li> state.move = moving
</ul>
At Completion:
<ul>
<li> state.cmd = ready
<li> state.move = indexed
<li> state.deploy = false
</ul>
    """
  }

  {
    name            = follow
    description     = """
Request Command.

Enable the NTG follow mode. When the follow mode is enabled, the NTG will move in a trapezoidal velocity profile in one direction and then following the same profile in the opposite and repeat as long as the follow mode is enabled. The maximum speed of the NTG is determined base on the specified wind speed   
  
Precondition:                             
<ul>
<li> state.cmd != uninitialized
<li> state.move = indexed | moving
</ul>
Execution:
<ul>
<li> none
</ul>
At Completion:
<ul>
<li> state.cmd = continuous
<li> state.move = indexed | moving
<li> state.deploy = true
</ul>
  """
    args = [
      {
        name        = windSpeed
        description = "wind speed to simulate, this drives the maximum speed at which the phase screen will travel."
        type        = double
        units       = "m/s"
      }
    ]
  }

]

